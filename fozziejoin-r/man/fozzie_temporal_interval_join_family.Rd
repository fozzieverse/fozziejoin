% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fozzie_temporal_interval_join.R
\name{fozzie_temporal_interval_join_family}
\alias{fozzie_temporal_interval_join_family}
\alias{fozzie_temporal_interval_join}
\alias{fozzie_temporal_interval_inner_join}
\alias{fozzie_temporal_interval_left_join}
\alias{fozzie_temporal_interval_right_join}
\alias{fozzie_temporal_interval_full_join}
\alias{fozzie_temporal_interval_anti_join}
\alias{fozzie_temporal_interval_semi_join}
\title{Perform a fuzzy join between two data frames using time-based interval overlap matching.}
\usage{
fozzie_temporal_interval_join(
  df1,
  df2,
  by = NULL,
  how = "inner",
  overlap_type = "any",
  maxgap = 0,
  minoverlap = 0,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_interval_inner_join(
  df1,
  df2,
  by = NULL,
  overlap_type = "any",
  maxgap = 0,
  minoverlap = 0,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_interval_left_join(
  df1,
  df2,
  by = NULL,
  overlap_type = "any",
  maxgap = 0,
  minoverlap = 0,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_interval_right_join(
  df1,
  df2,
  by = NULL,
  overlap_type = "any",
  maxgap = 0,
  minoverlap = 0,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_interval_full_join(
  df1,
  df2,
  by = NULL,
  overlap_type = "any",
  maxgap = 0,
  minoverlap = 0,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_interval_anti_join(
  df1,
  df2,
  by = NULL,
  overlap_type = "any",
  maxgap = 0,
  minoverlap = 0,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_interval_semi_join(
  df1,
  df2,
  by = NULL,
  overlap_type = "any",
  maxgap = 0,
  minoverlap = 0,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  nthread = getOption("fozzie.nthread", NULL)
)
}
\arguments{
\item{df1}{A data frame to join from (left table).}

\item{df2}{A data frame to join to (right table).}

\item{by}{A named list mapping left and right interval columns. Must contain two entries: \code{start} and \code{end}.}

\item{how}{A string specifying the join mode. One of:
\itemize{
\item \code{"inner"}: matched pairs only.
\item \code{"left"}: all rows from \code{df1}, unmatched rows filled with NAs.
\item \code{"right"}: all rows from \code{df2}, unmatched rows filled with NAs.
\item \code{"full"}: all rows from both \code{df1} and \code{df2}.
\item \code{"anti"}: rows from \code{df1} not matched in \code{df2}.
\item \code{"semi"}: rows from \code{df1} that matched with one or more matches in \code{df2}.
}}

\item{overlap_type}{A string specifying the overlap logic. One of:
\itemize{
\item \code{"any"}: any overlap.
\item \code{"within"}: left interval fully within right.
\item \code{"start"}: left start within right.
\item \code{"end"}: left end within right.
}}

\item{maxgap}{Maximum allowed gap between intervals, expressed in the specified time unit.}

\item{minoverlap}{Minimum required overlap length, expressed in the specified time unit.}

\item{unit}{A string specifying the time unit for \code{maxgap} and \code{minoverlap}. One of:
\code{"days"}, \code{"hours"}, \code{"minutes"}, \code{"seconds"}, \code{"ms"}, \code{"us"}, \code{"ns"}.}

\item{nthread}{Optional integer specifying the number of threads to use for
parallelization. If not provided, the value is determined by
\code{options("fozzie.nthread")}. The package default is inherited from
Rayon, the multithreading library used throughout the package.}
}
\value{
A data frame with approximately matched rows depending on the join type.
}
\description{
\code{fozzie_temporal_interval_join()} and its directional variants (\code{fozzie_temporal_interval_inner_join()}, \code{fozzie_temporal_interval_left_join()}, etc.)
enable approximate matching of time-based intervals in two data frames using continuous overlap logic.
}
\details{
All interval columns must be of the same type — either \code{Date} or \code{POSIXct} — across both data frames. Mixed types are not supported. Overlaps are computed using real-valued time semantics, allowing for fractional gaps and overlaps. This is useful for calendar intervals (\code{Date}) as well as precise timestamp ranges (\code{POSIXct}).
}
\examples{
df1 <- data.frame(
  start = as.Date(c("2023-01-01", "2023-01-05")),
  end = as.Date(c("2023-01-03", "2023-01-07"))
)
df2 <- data.frame(
  start = as.Date(c("2023-01-02", "2023-01-06")),
  end = as.Date(c("2023-01-04", "2023-01-08"))
)

fozzie_temporal_interval_inner_join(
  df1, df2,
  by = list(start = "start", end = "end"),
  overlap_type = "any",
  maxgap = 0.5,
  unit = "days"
)

}
