% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fozzie_temporal_join.R
\name{fozzie_temporal_join_family}
\alias{fozzie_temporal_join_family}
\alias{fozzie_temporal_join}
\alias{fozzie_temporal_inner_join}
\alias{fozzie_temporal_left_join}
\alias{fozzie_temporal_right_join}
\alias{fozzie_temporal_full_join}
\alias{fozzie_temporal_anti_join}
\alias{fozzie_temporal_semi_join}
\title{Perform a fuzzy join between two data frames using temporal difference matching.}
\usage{
fozzie_temporal_join(
  df1,
  df2,
  by = NULL,
  how = "inner",
  max_distance = 1,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  distance_col = NULL,
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_inner_join(
  df1,
  df2,
  by = NULL,
  max_distance = 1,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  distance_col = NULL,
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_left_join(
  df1,
  df2,
  by = NULL,
  max_distance = 1,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  distance_col = NULL,
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_right_join(
  df1,
  df2,
  by = NULL,
  max_distance = 1,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  distance_col = NULL,
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_full_join(
  df1,
  df2,
  by = NULL,
  max_distance = 1,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  distance_col = NULL,
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_anti_join(
  df1,
  df2,
  by = NULL,
  max_distance = 1,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  distance_col = NULL,
  nthread = getOption("fozzie.nthread", NULL)
)

fozzie_temporal_semi_join(
  df1,
  df2,
  by = NULL,
  max_distance = 1,
  unit = c("days", "hours", "minutes", "seconds", "ms", "us", "ns"),
  distance_col = NULL,
  nthread = getOption("fozzie.nthread", NULL)
)
}
\arguments{
\item{df1}{A data frame to join from (left table).}

\item{df2}{A data frame to join to (right table).}

\item{by}{A named list indicating the matching temporal columns, e.g. \code{list(time1 = "time2")}.}

\item{how}{A string specifying the join mode. One of:
\itemize{
\item \code{"inner"}: matched pairs only.
\item \code{"left"}: all rows from \code{df1}, unmatched rows filled with NAs.
\item \code{"right"}: all rows from \code{df2}, unmatched rows filled with NAs.
\item \code{"full"}: all rows from both \code{df1} and \code{df2}.
\item \code{"anti"}: rows from \code{df1} not matched in \code{df2}.
\item \code{"semi"}: rows from \code{df1} that matched with one or more matches in \code{df2}.
}}

\item{max_distance}{Maximum allowed time difference between values.}

\item{unit}{A string specifying the time unit for \code{max_distance}. One of:
\code{"days"}, \code{"hours"}, \code{"minutes"}, \code{"seconds"}, \code{"ms"}, \code{"us"}, \code{"ns"}.
If joining on \code{Date} columns, only \code{"days"} is allowed.}

\item{distance_col}{Optional name of column to store computed time differences (in seconds or days).}

\item{nthread}{Optional integer specifying the number of threads to use for
parallelization. If not provided, the value is determined by
\code{options("fozzie.nthread")}. The package default is inherited from
Rayon, the multithreading library used throughout the package.}
}
\value{
A data frame with approximately matched rows depending on the join type. If \code{distance_col} is specified, an additional numeric column is included.
}
\description{
\code{fozzie_temporal_join()} and its directional variants (\code{fozzie_temporal_inner_join()}, \code{fozzie_temporal_left_join()}, etc.)
enable approximate matching of temporal columns in two data frames based on absolute time difference thresholds.
These joins are conceptually similar to \code{fozzie_difference_join()}, but specialized for temporal data types (\code{Date} and \code{POSIXct}).
}
\details{
All join columns must be either \code{Date} or \code{POSIXct}, and must be consistent across both data frames. Mixed types (e.g., \code{Date} in one and \code{POSIXct} in the other) are not allowed.
}
\examples{
df1 <- data.frame(time = as.POSIXct(c("2023-01-01 12:00:00", "2023-01-01 13:00:00")))
df2 <- data.frame(time = as.POSIXct(c("2023-01-01 12:00:05", "2023-01-01 14:00:00")))

fozzie_temporal_inner_join(df1, df2, by = list(time = "time"), max_distance = 10, unit = "seconds")

df1 <- data.frame(date = as.Date(c("2023-01-01", "2023-01-03")))
df2 <- data.frame(date = as.Date(c("2023-01-02", "2023-01-04")))

fozzie_temporal_inner_join(df1, df2, by = list(date = "date"), max_distance = 1, unit = "days")

}
